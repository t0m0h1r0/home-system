- hosts: workers
  vars:
    iscsi_target: 192.168.10.173
    iscsi_iqn: iqn.2000-01.com.synology:syn1.default-target.9c3409d65fa
    iscsi_uuid: 511bfdf5-99f7-45d3-83aa-1a31ecbfd844
    mount_point: /mnt/iscsi
    docker_token: SWMTKN-1-39rudkfcvqnt8nnw8qnrvzt9u6uljeh13zw5fs0ye3ovp09tjy-9jw40a40f7usvmxv0vl4mcgbu
  become: true
  handlers:
    - name: restart Docker
      service:
        name: docker
        state: restarted
        enabled: yes

  tasks:
    - name: install apt librarries
      apt:
        upgrade: full
    - name: install apt librarries
      apt:
        name: "{{item}}"
        update_cache: yes
        cache_valid_time: 86400 #One day
      loop:
        - docker.io
        - docker-compose
        - python3-docker
        - ansible
        - cockpit
        - cockpit-pcp

    - name: install snap librarries
      snap:
        name: "{{item}}"
      loop:
        - lxd


    - name: update /etc/sysctl.conf
      ansible.posix.sysctl:
        name: net.ipv4.ip_forward
        value: '1'
        sysctl_set: yes
        state: present
        reload: yes


    - set_fact:
        docker_vars: {}
    - name: append key/values
      set_fact:
        docker_vars: "{{ docker_vars | default([]) | combine({ item.key : item.value }) }}"
      loop:
        - { key: "insecure-registries", value: [ "{{groups['registry'][0]}}:5000" ] }
    - name: write var to file
      copy:
        content: "{{ docker_vars | to_nice_json }}"
        dest: /etc/docker/daemon.json
      notify:
        - restart Docker

    - name: create PV for plots
      community.docker.docker_volume:
        name: "{{item.name}}"
        driver_options:
          type: none
          o: bind
          device: "{{item.dir}}"
      loop:
        - { "name": "docker_dir", "dir": "/var/lib/docker" }

    - name: ssh publickey registration
      authorized_key:
        user: tomohiro
        key: "{{ lookup('file', 'id_rsa.pub') }}"

    - name: join Docker swarm
      community.docker.docker_swarm:
        remote_addrs: "{{groups['master']}}"
        join_token: "{{docker_token}}"
        state: join

    - name: set node labels
      community.docker.docker_node:
        hostname: "{{inventory_hostname}}"
        labels:
          database: "true"
          storage: "false"
          compute: "false"
          grafana: "true"
          ldap: "true"
          portainer: "true"
        labels_state: merge

    - name: create bridge
      template:
        src="bridge-config.yml"
        dest="/etc/netplan/99-bridge-config.yaml"
